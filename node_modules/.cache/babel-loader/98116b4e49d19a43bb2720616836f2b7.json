{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\addEmployee\\\\options\\\\forms\\\\others\\\\MultipleSelectChip.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { API_PATHS } from '../../../../../../../../../configs/api';\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../../utils/constants';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../../utils/httpResponseCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function MultipleSelectChip({\n  listBenefit,\n  setListBenefit\n}) {\n  _s();\n\n  const [benefits, setBenefit] = React.useState([]);\n  const [value, setValue] = React.useState([]);\n  const getBenefit = React.useCallback(async () => {\n    const json = await axios.get(API_PATHS.getBenefit, {\n      headers: {\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n      }\n    });\n\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\n      setBenefit(json.data.data);\n    }\n  }, []);\n  React.useEffect(() => {\n    getBenefit();\n  }, [getBenefit]);\n  React.useEffect(() => {\n    const benefitIds = listBenefit.benefits.map(item => item.id);\n    setListBenefit({ ...listBenefit,\n      benefits: benefitIds\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listBenefit.benefits]);\n  console.log(listBenefit.benefits);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        background: '#f1f3f5',\n        ':first-of-type': {\n          maxHeight: '150px',\n          overflowY: 'auto'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: listBenefit.benefits,\n        onChange: e => {\n          setListBenefit({ ...listBenefit,\n            benefits: e.target.value\n          });\n        },\n        sx: {\n          div: {\n            padding: '5px'\n          },\n          minHeight: '47px'\n        },\n        renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 0.5\n          },\n          children: selected.map(value => {\n            let matchingBenefit;\n            matchingBenefit = benefits.find(item => item.id === value);\n\n            if (matchingBenefit) {\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                label: matchingBenefit.name,\n                sx: {\n                  color: 'rgb(0, 145, 255)',\n                  backgroundColor: 'white',\n                  borderRadius: '6px'\n                }\n              }, matchingBenefit.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this);\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this),\n        MenuProps: MenuProps,\n        children: benefits && benefits.map(benefit => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: benefit,\n          \"data-name\": benefit && benefit.name,\n          children: benefit && benefit.name\n        }, benefit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelectChip, \"cjRltue6GIdtgbRnkrCbXP477d0=\");\n\n_c = MultipleSelectChip;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelectChip\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/addEmployee/options/forms/others/MultipleSelectChip.tsx"],"names":["React","Box","MenuItem","FormControl","Select","Chip","axios","Cookies","API_PATHS","ACCESS_TOKEN_KEY","RESPONSE_STATUS_SUCCESS","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultipleSelectChip","listBenefit","setListBenefit","benefits","setBenefit","useState","value","setValue","getBenefit","useCallback","json","get","headers","Authorization","status","data","useEffect","benefitIds","map","item","id","console","log","background","overflowY","e","target","div","padding","minHeight","selected","display","flexWrap","gap","matchingBenefit","find","name","color","backgroundColor","borderRadius","benefit"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Chip from '@mui/material/Chip';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { API_PATHS } from '../../../../../../../../../configs/api';\r\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../../utils/constants';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../../utils/httpResponseCode';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\ninterface Props {\r\n  listBenefit: any;\r\n  setListBenefit: any;\r\n}\r\n\r\nexport default function MultipleSelectChip({ listBenefit, setListBenefit }: Props) {\r\n  const [benefits, setBenefit] = React.useState([]);\r\n  const [value, setValue] = React.useState<any>([]);\r\n\r\n  const getBenefit = React.useCallback(async () => {\r\n    const json = await axios.get(API_PATHS.getBenefit, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n      },\r\n    });\r\n\r\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n      setBenefit(json.data.data);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getBenefit();\r\n  }, [getBenefit]);\r\n\r\n  React.useEffect(() => {\r\n    const benefitIds = listBenefit.benefits.map((item: any) => item.id);\r\n    setListBenefit({ ...listBenefit, benefits: benefitIds });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [listBenefit.benefits]);\r\n\r\n  console.log(listBenefit.benefits);\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl\r\n        fullWidth\r\n        sx={{ background: '#f1f3f5', ':first-of-type': { maxHeight: '150px', overflowY: 'auto' } }}\r\n      >\r\n        <Select\r\n          multiple\r\n          value={listBenefit.benefits}\r\n          onChange={(e) => {\r\n            setListBenefit({ ...listBenefit, benefits: e.target.value });\r\n          }}\r\n          sx={{\r\n            div: { padding: '5px' },\r\n            minHeight: '47px',\r\n          }}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value: any) => {\r\n                let matchingBenefit: any;\r\n                matchingBenefit = benefits.find((item: any) => item.id === value);\r\n\r\n                if (matchingBenefit) {\r\n                  return (\r\n                    <Chip\r\n                      key={matchingBenefit.id}\r\n                      label={matchingBenefit.name}\r\n                      sx={{ color: 'rgb(0, 145, 255)', backgroundColor: 'white', borderRadius: '6px' }}\r\n                    />\r\n                  );\r\n                }\r\n\r\n                return null;\r\n              })}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {benefits &&\r\n            benefits.map((benefit: any) => (\r\n              <MenuItem key={benefit.id} value={benefit} data-name={benefit && benefit.name}>\r\n                {benefit && benefit.name}\r\n              </MenuItem>\r\n            ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}