{"ast":null,"code":"import axios from 'axios';\nimport { API_PATHS } from '../../../../../../configs/api';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../utils/httpResponseCode';\nimport { toast } from 'react-toastify';\nexport const addEmployee = async (dataAdd, updateFileContract, uploadDocument) => {\n  const json = await axios.post(API_PATHS.employee, dataAdd, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  const data = jsonData.data.data.data;\n\n  if (updateFileContract) {\n    const formData1 = new FormData();\n    formData1.append('employee_id', data[0].id);\n\n    for (let i = 0; i < updateFileContract.length; i++) {\n      formData1.append('names[]', updateFileContract[i].name);\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\n      const file = updateFileContract[i].fileList[0];\n      formData1.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  if (uploadDocument) {\n    const formData2 = new FormData();\n    formData2.append('employee_id', data[0].id);\n\n    for (let i = 0; i < uploadDocument.length; i++) {\n      const file = uploadDocument[i].file[0];\n      formData2.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadDocument, formData2, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\n    toast.success('Success message');\n  }\n};\nexport const updateEmployee = async (number, dataUpdate, updateFileContract, uploadDocument) => {\n  const json = await axios.put(`${API_PATHS.employee}/${number}`, dataUpdate, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  const data = jsonData.data.data.data;\n\n  if (updateFileContract) {\n    const formData1 = new FormData();\n    formData1.append('employee_id', data[0].id);\n\n    for (let i = 0; i < updateFileContract.length; i++) {\n      formData1.append('names[]', updateFileContract[i].name);\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\n      const file = updateFileContract[i].fileList[0];\n      formData1.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  if (uploadDocument) {\n    const formData2 = new FormData();\n    formData2.append('employee_id', data[0].id);\n\n    for (let i = 0; i < uploadDocument.length; i++) {\n      const file = uploadDocument[i].file[0];\n      formData2.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadDocument, formData2, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\n    toast.success('Success message');\n  }\n};","map":{"version":3,"sources":["C:/Users/thang/Downloads/Employee/src/modules/auth/pages/employeeManagement/layouts/header/employee.ts"],"names":["axios","API_PATHS","Cookies","ACCESS_TOKEN_KEY","RESPONSE_STATUS_SUCCESS","toast","addEmployee","dataAdd","updateFileContract","uploadDocument","json","post","employee","headers","Authorization","get","jsonData","data","formData1","FormData","append","id","i","length","name","contract_date","file","fileList","uploadFileContract","formData2","status","success","updateEmployee","number","dataUpdate","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { API_PATHS } from '../../../../../../configs/api';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../utils/httpResponseCode';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const addEmployee = async (dataAdd: any, updateFileContract: any, uploadDocument: any) => {\r\n  const json = await axios.post(API_PATHS.employee, dataAdd, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n  const data = jsonData.data.data.data;\r\n  if (updateFileContract) {\r\n    const formData1 = new FormData();\r\n    formData1.append('employee_id', data[0].id);\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      formData1.append('names[]', updateFileContract[i].name);\r\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\r\n      const file = updateFileContract[i].fileList[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  if (uploadDocument) {\r\n    const formData2 = new FormData();\r\n    formData2.append('employee_id', data[0].id);\r\n    for (let i = 0; i < uploadDocument.length; i++) {\r\n      const file = uploadDocument[i].file[0];\r\n      formData2.append('documents[]', file, file.name);\r\n    }\r\n\r\n    await axios.post(API_PATHS.uploadDocument, formData2, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n    toast.success('Success message');\r\n  }\r\n};\r\n\r\nexport const updateEmployee = async (number: any, dataUpdate: any, updateFileContract: any, uploadDocument: any) => {\r\n  const json = await axios.put(`${API_PATHS.employee}/${number}`, dataUpdate, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n  const data = jsonData.data.data.data;\r\n  if (updateFileContract) {\r\n    const formData1 = new FormData();\r\n    formData1.append('employee_id', data[0].id);\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      formData1.append('names[]', updateFileContract[i].name);\r\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\r\n      const file = updateFileContract[i].fileList[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  if (uploadDocument) {\r\n    const formData2 = new FormData();\r\n    formData2.append('employee_id', data[0].id);\r\n    for (let i = 0; i < uploadDocument.length; i++) {\r\n      const file = uploadDocument[i].file[0];\r\n      formData2.append('documents[]', file, file.name);\r\n    }\r\n\r\n    await axios.post(API_PATHS.uploadDocument, formData2, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n    toast.success('Success message');\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}