{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\addEmployee\\\\options\\\\forms\\\\others\\\\TableUpdate.tsx\";\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport '../../../../table/Table.scss';\nimport { Box, Button } from '@mui/material';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'no',\n  label: 'No',\n  minWidth: 20\n}, {\n  id: 'document_name',\n  label: 'Document Name',\n  minWidth: 315\n}, {\n  id: 'create_at',\n  label: 'Create At',\n  minWidth: 315\n}, {\n  id: 'action',\n  label: 'Action',\n  minWidth: 315\n}];\nexport default function TableUpdate({\n  data,\n  setData\n}) {\n  function createData(no, document_name, create_at, action) {\n    return {\n      no,\n      document_name,\n      create_at,\n      action\n    };\n  }\n\n  console.log(rows);\n  const rows = data && data.map((item, index) => createData(index, item.documentName, item.date, index));\n\n  const handleDelete = index => {\n    const newDataTable = [...data];\n    newDataTable.splice(index, 1);\n    setData(newDataTable);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden',\n      padding: '0 20px 20px 20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: '225px',\n        minHeight: '225px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                minWidth: column.minWidth,\n                textAlign: 'center'\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows && rows.map((row, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n\n                if (column.id === 'action') {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        minWidth: '125px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"text\",\n                      color: \"error\",\n                      sx: {\n                        backgroundColor: 'rgb(255, 239, 239)',\n                        textTransform: 'none',\n                        padding: '0 12px',\n                        minWidth: '40px'\n                      },\n                      onClick: () => handleDelete(index),\n                      children: [/*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 31\n                      }, this), \" Delete\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 29\n                    }, this)]\n                  }, column.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 27\n                  }, this);\n                }\n\n                if (column.id === 'document_name') {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: value.fileList[0].name\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 32\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 32\n                  }, this);\n                }\n              })\n            }, row.no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = TableUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUpdate\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/addEmployee/options/forms/others/TableUpdate.tsx"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Box","Button","DeleteOutlineIcon","columns","id","label","minWidth","TableUpdate","data","setData","createData","no","document_name","create_at","action","console","log","rows","map","item","index","documentName","date","handleDelete","newDataTable","splice","width","overflow","padding","maxHeight","minHeight","column","textAlign","row","value","backgroundColor","textTransform","fileList","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport '../../../../table/Table.scss';\r\nimport { Box, Button } from '@mui/material';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\ninterface Column {\r\n  id: 'no' | 'document_name' | 'create_at' | 'action';\r\n  label: string;\r\n  minWidth?: number;\r\n}\r\n\r\nconst columns: readonly Column[] = [\r\n  { id: 'no', label: 'No', minWidth: 20 },\r\n  { id: 'document_name', label: 'Document Name', minWidth: 315 },\r\n  {\r\n    id: 'create_at',\r\n    label: 'Create At',\r\n    minWidth: 315,\r\n  },\r\n  {\r\n    id: 'action',\r\n    label: 'Action',\r\n    minWidth: 315,\r\n  },\r\n];\r\n\r\ninterface Data {\r\n  no: number;\r\n  document_name: string;\r\n  create_at: string;\r\n  action: number;\r\n}\r\n\r\ninterface Props {\r\n  data: any;\r\n  setData: any;\r\n}\r\n\r\nexport default function TableUpdate({ data, setData }: Props) {\r\n  function createData(no: number, document_name: string, create_at: string, action: any): Data {\r\n    return { no, document_name, create_at, action };\r\n  }\r\n\r\n  console.log(rows);\r\n\r\n  const rows = data && data.map((item: any, index: number) => createData(index, item.documentName, item.date, index));\r\n\r\n  const handleDelete = (index: number) => {\r\n    const newDataTable = [...data];\r\n    newDataTable.splice(index, 1);\r\n    setData(newDataTable);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden', padding: '0 20px 20px 20px' }}>\r\n      <TableContainer sx={{ maxHeight: '225px', minHeight: '225px', width: '100%' }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} style={{ minWidth: column.minWidth, textAlign: 'center' }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows &&\r\n              rows.map((row: any, index: number) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.no}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n\r\n                      if (column.id === 'action') {\r\n                        return (\r\n                          <TableCell key={column.id}>\r\n                            <Box sx={{ minWidth: '125px' }}></Box>\r\n                            <Button\r\n                              variant=\"text\"\r\n                              color=\"error\"\r\n                              sx={{\r\n                                backgroundColor: 'rgb(255, 239, 239)',\r\n                                textTransform: 'none',\r\n                                padding: '0 12px',\r\n                                minWidth: '40px',\r\n                              }}\r\n                              onClick={() => handleDelete(index)}\r\n                            >\r\n                              <DeleteOutlineIcon /> Delete\r\n                            </Button>\r\n                          </TableCell>\r\n                        );\r\n                      }\r\n                      if (column.id === 'document_name') {\r\n                        return <TableCell key={column.id}>{value.fileList[0].name}</TableCell>;\r\n                      } else {\r\n                        return <TableCell key={column.id}>{value}</TableCell>;\r\n                      }\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}