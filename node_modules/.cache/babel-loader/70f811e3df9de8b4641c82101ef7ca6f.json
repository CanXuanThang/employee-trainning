{"ast":null,"code":"import axios from 'axios';\nimport { API_PATHS } from '../../../../../../configs/api';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../utils/httpResponseCode';\nimport { toast } from 'react-toastify';\nexport const addEmployee = async (dataAdd, updateFileContract, uploadDocument) => {\n  const json = await axios.post(API_PATHS.employee, dataAdd, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  console.log(json.data.id);\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  const data = jsonData.data.data.data;\n\n  if (updateFileContract.length > 0) {\n    const formData1 = new FormData();\n    formData1.append('employee_id', data[0].id);\n\n    for (let i = 0; i < updateFileContract.length; i++) {\n      formData1.append('names[]', updateFileContract[i].name);\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\n      const file = updateFileContract[i].fileList[0];\n      formData1.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  if (uploadDocument !== undefined && uploadDocument !== null && uploadDocument.length > 0) {\n    const formData2 = new FormData();\n    formData2.append('employee_id', data[0].id);\n\n    for (let i = 0; i < uploadDocument.length; i++) {\n      const file = uploadDocument[i].file[0];\n      formData2.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadDocument, formData2, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\n    toast.success('Success message');\n  }\n};\nexport const updateEmployee = async (number, dataUpdate, deleteDocument, updateFileContract, uploadDocument) => {\n  const json = await axios.put(`${API_PATHS.employee}/${number}`, dataUpdate, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n\n  if (updateFileContract.length > 0) {\n    const formData1 = new FormData();\n    formData1.append('employee_id', number);\n\n    for (let i = 0; i < updateFileContract.length; i++) {\n      formData1.append('names[]', updateFileContract[i].name);\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\n      const file = updateFileContract[i].fileList[0];\n      formData1.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  const formData1 = new FormData();\n  formData1.append('employee_id', number);\n\n  if (deleteDocument.length > 0) {\n    for (let i = 0; i < deleteDocument.length; i++) {\n      formData1.append('deleted_ids[]', deleteDocument[i]);\n    }\n  }\n\n  if (uploadDocument.length > 0) {\n    for (let i = 0; i < updateFileContract.length; i++) {\n      const file = uploadDocument[i].file[0];\n      formData1.append('documents[]', file, file.name);\n    }\n  }\n\n  await axios.post(API_PATHS.uploadDocument, formData1, {\n    headers: {\n      Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\n    toast.success('Success message');\n  }\n};","map":{"version":3,"sources":["C:/Users/thang/Downloads/Employee/src/modules/auth/pages/employeeManagement/layouts/header/employee.ts"],"names":["axios","API_PATHS","Cookies","ACCESS_TOKEN_KEY","RESPONSE_STATUS_SUCCESS","toast","addEmployee","dataAdd","updateFileContract","uploadDocument","json","post","employee","headers","Authorization","get","console","log","data","id","jsonData","length","formData1","FormData","append","i","name","contract_date","file","fileList","uploadFileContract","undefined","formData2","status","success","updateEmployee","number","dataUpdate","deleteDocument","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { API_PATHS } from '../../../../../../configs/api';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../utils/httpResponseCode';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const addEmployee = async (dataAdd: any, updateFileContract: any, uploadDocument: any) => {\r\n  const json = await axios.post(API_PATHS.employee, dataAdd, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n\r\n  console.log(json.data.id);\r\n\r\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n  const data = jsonData.data.data.data;\r\n  if (updateFileContract.length > 0) {\r\n    const formData1 = new FormData();\r\n    formData1.append('employee_id', data[0].id);\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      formData1.append('names[]', updateFileContract[i].name);\r\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\r\n      const file = updateFileContract[i].fileList[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  if (uploadDocument !== undefined && uploadDocument !== null && uploadDocument.length > 0) {\r\n    const formData2 = new FormData();\r\n    formData2.append('employee_id', data[0].id);\r\n    for (let i = 0; i < uploadDocument.length; i++) {\r\n      const file = uploadDocument[i].file[0];\r\n      formData2.append('documents[]', file, file.name);\r\n    }\r\n\r\n    await axios.post(API_PATHS.uploadDocument, formData2, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n    toast.success('Success message');\r\n  }\r\n};\r\n\r\nexport const updateEmployee = async (\r\n  number: any,\r\n  dataUpdate: any,\r\n  deleteDocument: any,\r\n  updateFileContract: any,\r\n  uploadDocument: any,\r\n) => {\r\n  const json = await axios.put(`${API_PATHS.employee}/${number}`, dataUpdate, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n\r\n  if (updateFileContract.length > 0) {\r\n    const formData1 = new FormData();\r\n    formData1.append('employee_id', number);\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      formData1.append('names[]', updateFileContract[i].name);\r\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\r\n      const file = updateFileContract[i].fileList[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  const formData1 = new FormData();\r\n  formData1.append('employee_id', number);\r\n  if (deleteDocument.length > 0) {\r\n    for (let i = 0; i < deleteDocument.length; i++) {\r\n      formData1.append('deleted_ids[]', deleteDocument[i]);\r\n    }\r\n  }\r\n  if (uploadDocument.length > 0) {\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      const file = uploadDocument[i].file[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n  }\r\n  await axios.post(API_PATHS.uploadDocument, formData1, {\r\n    headers: {\r\n      Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n\r\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n    toast.success('Success message');\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}