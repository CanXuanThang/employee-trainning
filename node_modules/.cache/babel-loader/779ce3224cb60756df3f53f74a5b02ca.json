{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\table\\\\ContainerTableBody.tsx\",\n    _s = $RefreshSig$();\n\nimport { TableBody } from '@mui/material';\nimport Rows from './Rows';\nimport { ENTITLE, GENDER, TYPE } from './type';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setListCheckDelete } from '../../../../redux/employeeReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContainerTableBody(props) {\n  _s();\n\n  const {\n    data,\n    columns,\n    check\n  } = props;\n  const [listCheck, setListCheck] = useState([]);\n  const dispatch = useDispatch();\n  const id = useSelector(state => state.employee.id);\n  console.log(id);\n  useEffect(() => {\n    dispatch(setListCheckDelete(listCheck));\n  }, [dispatch, listCheck]);\n  const rows = data.map(data => {\n    const first_contract_date = data.contracts.slice(0, 1);\n    const secound_contract_date = data.contracts.slice(1, 2);\n    let gender = GENDER[data.gender];\n    let type = TYPE[data.type];\n    let entitle_ot = ENTITLE[data.entitle_ot];\n    let meal_allowance_paid = ENTITLE[data.meal_allowance_paid];\n    let basic_salary = data.basic_salary.toLocaleString('en-US');\n    let meal_allowance = data.meal_allowance.toLocaleString('en-US');\n    return {\n      id: data.id,\n      staff_id: data.staff_id,\n      name: data.name,\n      gender: gender,\n      card_number: data.card_number,\n      bank_account_no: data.bank_account_no,\n      family_card_number: data.family_card_number,\n      marriage_code: data.marriage_code,\n      mother_name: data.mother_name,\n      pob: data.pob,\n      dob: data.dob,\n      home_address: {\n        home_address_1: data.home_address_1,\n        home_address_2: data.home_address_2\n      },\n      nc_id: data.nc_id,\n      contract_start_date: data.contract_start_date,\n      first_contract_date: first_contract_date.map(item => item.contract_date),\n      secound_contract_date: secound_contract_date.map(item => item.contract_date),\n      deleted_at: data.deleted_at,\n      department_name: data.department_name,\n      type: type,\n      basic_salary: basic_salary,\n      position_name: data.position_name,\n      entitle_ot: entitle_ot,\n      meal_allowance_paid: meal_allowance_paid,\n      meal_allowance: meal_allowance,\n      grade_name: data.grade_name\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(TableBody, {\n    children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(Rows, {\n      checked: check,\n      row: row,\n      columns: columns,\n      listCheck: setListCheck\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContainerTableBody, \"CoJtmGTGdYnXBCjpfO0x2yPXuHg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContainerTableBody;\nexport default ContainerTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerTableBody\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/table/ContainerTableBody.tsx"],"names":["TableBody","Rows","ENTITLE","GENDER","TYPE","useEffect","useState","useDispatch","useSelector","setListCheckDelete","ContainerTableBody","props","data","columns","check","listCheck","setListCheck","dispatch","id","state","employee","console","log","rows","map","first_contract_date","contracts","slice","secound_contract_date","gender","type","entitle_ot","meal_allowance_paid","basic_salary","toLocaleString","meal_allowance","staff_id","name","card_number","bank_account_no","family_card_number","marriage_code","mother_name","pob","dob","home_address","home_address_1","home_address_2","nc_id","contract_start_date","item","contract_date","deleted_at","department_name","position_name","grade_name","row","index"],"mappings":"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","sourcesContent":["import { TableBody } from '@mui/material';\r\nimport { Employee } from '../../../../../../models/employee';\r\nimport Rows from './Rows';\r\nimport { ENTITLE, GENDER, TYPE } from './type';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../../../../redux/reducer';\r\nimport { Action } from 'typesafe-actions';\r\nimport { setListCheckDelete } from '../../../../redux/employeeReducer';\r\n\r\ninterface Props {\r\n  data: Employee[];\r\n  columns: any;\r\n  check: boolean;\r\n}\r\n\r\nfunction ContainerTableBody(props: Props) {\r\n  const { data, columns, check } = props;\r\n  const [listCheck, setListCheck] = useState<number[]>([]);\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const id = useSelector((state: any) => state.employee.id);\r\n  console.log(id);\r\n\r\n  useEffect(() => {\r\n    dispatch(setListCheckDelete(listCheck));\r\n  }, [dispatch, listCheck]);\r\n\r\n  const rows = data.map((data: any) => {\r\n    const first_contract_date = data.contracts.slice(0, 1);\r\n    const secound_contract_date = data.contracts.slice(1, 2);\r\n\r\n    let gender = GENDER[data.gender];\r\n    let type = TYPE[data.type];\r\n    let entitle_ot = ENTITLE[data.entitle_ot];\r\n    let meal_allowance_paid = ENTITLE[data.meal_allowance_paid];\r\n    let basic_salary = data.basic_salary.toLocaleString('en-US');\r\n    let meal_allowance = data.meal_allowance.toLocaleString('en-US');\r\n\r\n    return {\r\n      id: data.id,\r\n      staff_id: data.staff_id,\r\n      name: data.name,\r\n      gender: gender,\r\n      card_number: data.card_number,\r\n      bank_account_no: data.bank_account_no,\r\n      family_card_number: data.family_card_number,\r\n      marriage_code: data.marriage_code,\r\n      mother_name: data.mother_name,\r\n      pob: data.pob,\r\n      dob: data.dob,\r\n      home_address: {\r\n        home_address_1: data.home_address_1,\r\n        home_address_2: data.home_address_2,\r\n      },\r\n      nc_id: data.nc_id,\r\n      contract_start_date: data.contract_start_date,\r\n      first_contract_date: first_contract_date.map((item: any) => item.contract_date),\r\n      secound_contract_date: secound_contract_date.map((item: any) => item.contract_date),\r\n      deleted_at: data.deleted_at,\r\n      department_name: data.department_name,\r\n      type: type,\r\n      basic_salary: basic_salary,\r\n      position_name: data.position_name,\r\n      entitle_ot: entitle_ot,\r\n      meal_allowance_paid: meal_allowance_paid,\r\n      meal_allowance: meal_allowance,\r\n      grade_name: data.grade_name,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <TableBody>\r\n      {rows.map((row: any, index: number) => (\r\n        <Rows checked={check} row={row} columns={columns} key={index} listCheck={setListCheck} />\r\n      ))}\r\n    </TableBody>\r\n  );\r\n}\r\n\r\nexport default ContainerTableBody;\r\n"]},"metadata":{},"sourceType":"module"}