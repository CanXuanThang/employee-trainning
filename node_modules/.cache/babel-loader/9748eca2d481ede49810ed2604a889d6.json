{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Employee\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\addEmployee\\\\options\\\\forms\\\\contractInformation\\\\TableUpdate.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport '../../../../table/Table.scss';\nimport { Box, Button } from '@mui/material';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'no',\n  label: 'No',\n  minWidth: 20\n}, {\n  id: 'contract_name',\n  label: 'Contract Name',\n  minWidth: 120\n}, {\n  id: 'sign_date',\n  label: 'Sign Date',\n  minWidth: 120\n}, {\n  id: 'action',\n  label: 'Action',\n  minWidth: 270\n}];\nexport default function TableUpdate({\n  dataTable,\n  setDataTable\n}) {\n  _s();\n\n  function createData(no, contract_name = dataTable.name, sign_date = dataTable.date, action) {\n    return {\n      no,\n      contract_name,\n      sign_date,\n      action\n    };\n  }\n\n  const [datas, getDatas] = React.useState('');\n  const dataItem = useSelector(state => state.employee.dataUpdate);\n  const extractedData = dataItem && dataItem.contracts.map(contract => {\n    return {\n      contract_date: contract.contract_date,\n      name: contract.name,\n      fileList: ''\n    };\n  });\n  React.useEffect(() => {\n    if (extractedData) {\n      const mergedData = [...dataTable, ...extractedData];\n      getDatas(mergedData);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [dataTable]);\n\n  const handleDeleteRow = (row, index) => {\n    const newDataTable = [...dataTable];\n    newDataTable.splice(index, 1);\n    setDataTable(newDataTable);\n  };\n\n  const rows = datas && datas.map((a, index) => createData(index + 1, a.name, a.contract_date, index));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: '225px',\n        minHeight: '225px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                minWidth: column.minWidth,\n                textAlign: 'center'\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows && rows.map((row, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n\n                if (column.id === 'action') {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        minWidth: '125px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"text\",\n                      color: \"error\",\n                      sx: {\n                        backgroundColor: 'rgb(255, 239, 239)',\n                        textTransform: 'none',\n                        padding: '0 12px',\n                        minWidth: '40px'\n                      },\n                      onClick: () => handleDeleteRow(row, index),\n                      children: [/*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 31\n                      }, this), \" Delete\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 29\n                    }, this)]\n                  }, column.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 27\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 32\n                  }, this);\n                }\n              })\n            }, row.no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableUpdate, \"cxNqBUaSSMgkPEd6Oi5ms5Ive/c=\", false, function () {\n  return [useSelector];\n});\n\n_c = TableUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUpdate\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Employee/src/modules/auth/pages/employeeManagement/layouts/addEmployee/options/forms/contractInformation/TableUpdate.tsx"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Box","Button","DeleteOutlineIcon","useSelector","columns","id","label","minWidth","TableUpdate","dataTable","setDataTable","createData","no","contract_name","name","sign_date","date","action","datas","getDatas","useState","dataItem","state","employee","dataUpdate","extractedData","contracts","map","contract","contract_date","fileList","useEffect","mergedData","handleDeleteRow","row","index","newDataTable","splice","rows","a","width","overflow","maxHeight","minHeight","column","textAlign","value","backgroundColor","textTransform","padding"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport '../../../../table/Table.scss';\r\nimport { Box, Button } from '@mui/material';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface Column {\r\n  id: 'no' | 'contract_name' | 'sign_date' | 'action';\r\n  label: string;\r\n  minWidth?: number;\r\n}\r\n\r\nconst columns: readonly Column[] = [\r\n  { id: 'no', label: 'No', minWidth: 20 },\r\n  { id: 'contract_name', label: 'Contract Name', minWidth: 120 },\r\n  {\r\n    id: 'sign_date',\r\n    label: 'Sign Date',\r\n    minWidth: 120,\r\n  },\r\n  {\r\n    id: 'action',\r\n    label: 'Action',\r\n    minWidth: 270,\r\n  },\r\n];\r\n\r\ninterface Data {\r\n  no: number;\r\n  contract_name: string;\r\n  sign_date: string;\r\n  action: number;\r\n}\r\n\r\ninterface Props {\r\n  dataTable: any;\r\n  setDataTable: any;\r\n}\r\n\r\nexport default function TableUpdate({ dataTable, setDataTable }: Props) {\r\n  function createData(\r\n    no: number,\r\n    contract_name: string = dataTable.name,\r\n    sign_date: string = dataTable.date,\r\n    action: any,\r\n  ): Data {\r\n    return { no, contract_name, sign_date, action };\r\n  }\r\n\r\n  const [datas, getDatas] = React.useState<any>('');\r\n  const dataItem = useSelector((state: any) => state.employee.dataUpdate);\r\n\r\n  const extractedData =\r\n    dataItem &&\r\n    dataItem.contracts.map((contract: any) => {\r\n      return {\r\n        contract_date: contract.contract_date,\r\n        name: contract.name,\r\n        fileList: '',\r\n      };\r\n    });\r\n\r\n  React.useEffect(() => {\r\n    if (extractedData) {\r\n      const mergedData = [...dataTable, ...extractedData];\r\n      getDatas(mergedData);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dataTable]);\r\n\r\n  const handleDeleteRow = (row: any, index: number) => {\r\n    const newDataTable = [...dataTable];\r\n    newDataTable.splice(index, 1);\r\n    setDataTable(newDataTable);\r\n  };\r\n\r\n  const rows = datas && datas.map((a: any, index: number) => createData(index + 1, a.name, a.contract_date, index));\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: '225px', minHeight: '225px', width: '100%' }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} style={{ minWidth: column.minWidth, textAlign: 'center' }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows &&\r\n              rows.map((row: any, index: number) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.no}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n\r\n                      if (column.id === 'action') {\r\n                        return (\r\n                          <TableCell key={column.id}>\r\n                            <Box sx={{ minWidth: '125px' }}></Box>\r\n                            <Button\r\n                              variant=\"text\"\r\n                              color=\"error\"\r\n                              sx={{\r\n                                backgroundColor: 'rgb(255, 239, 239)',\r\n                                textTransform: 'none',\r\n                                padding: '0 12px',\r\n                                minWidth: '40px',\r\n                              }}\r\n                              onClick={() => handleDeleteRow(row, index)}\r\n                            >\r\n                              <DeleteOutlineIcon /> Delete\r\n                            </Button>\r\n                          </TableCell>\r\n                        );\r\n                      } else {\r\n                        return <TableCell key={column.id}>{value}</TableCell>;\r\n                      }\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}