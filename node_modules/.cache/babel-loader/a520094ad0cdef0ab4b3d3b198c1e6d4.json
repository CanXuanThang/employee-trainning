{"ast":null,"code":"import axios from 'axios';\nimport { API_PATHS } from '../../../../../../configs/api';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../utils/httpResponseCode';\nimport { toast } from 'react-toastify';\nexport const addEmployee = async (dataAdd, updateFileContract, uploadDocument) => {\n  await axios.post(API_PATHS.employee, dataAdd, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n  const data = jsonData.data.data.data;\n\n  if (updateFileContract.length > 0) {\n    const formData1 = new FormData();\n    formData1.append('employee_id', data[0].id);\n\n    for (let i = 0; i < updateFileContract.length; i++) {\n      formData1.append('names[]', updateFileContract[i].name);\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\n      const file = updateFileContract[i].fileList[0];\n      formData1.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  if (uploadDocument.length > 0) {\n    const formData = new FormData();\n    formData.append('employee_id', data[0].id);\n\n    for (let i = 0; i < uploadDocument.length; i++) {\n      const file = uploadDocument[i].file[0];\n      formData.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadDocument, formData, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  } else {\n    toast.success('Success message');\n  }\n};\nexport const updateEmployee = async (number, dataUpdate, deleteDocument, updateFileContract, uploadDocument) => {\n  const json = await axios.put(`${API_PATHS.employee}/${number}`, dataUpdate, {\n    headers: {\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n    }\n  });\n\n  if (updateFileContract.length > 0) {\n    const formData1 = new FormData();\n    formData1.append('employee_id', number);\n\n    for (let i = 0; i < updateFileContract.length; i++) {\n      formData1.append('names[]', updateFileContract[i].name);\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\n      const file = updateFileContract[i].fileList[0];\n      formData1.append('documents[]', file, file.name);\n    }\n\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\n      headers: {\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  const formData1 = new FormData();\n  formData1.append('employee_id', number);\n\n  if (deleteDocument.length > 0) {\n    for (let i = 0; i < deleteDocument.length; i++) {\n      formData1.append('deleted_ids[]', deleteDocument[i]);\n    }\n  }\n\n  if (uploadDocument && uploadDocument.length > 0) {\n    for (let i = 0; i < updateFileContract.length; i++) {\n      formData1.append('names[]', updateFileContract[i].name);\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\n      const file = updateFileContract[i].fileList[0];\n      formData1.append('documents[]', file, file.name);\n    }\n  }\n\n  await axios.post(API_PATHS.uploadDocument, formData1, {\n    headers: {\n      Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\n    toast.success('Success message');\n  }\n};","map":{"version":3,"sources":["C:/Users/thang/Downloads/Employee/src/modules/auth/pages/employeeManagement/layouts/header/employee.ts"],"names":["axios","API_PATHS","Cookies","ACCESS_TOKEN_KEY","RESPONSE_STATUS_SUCCESS","toast","addEmployee","dataAdd","updateFileContract","uploadDocument","post","employee","headers","Authorization","get","jsonData","data","length","formData1","FormData","append","id","i","name","contract_date","file","fileList","uploadFileContract","formData","success","updateEmployee","number","dataUpdate","deleteDocument","json","put","status"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { API_PATHS } from '../../../../../../configs/api';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../utils/httpResponseCode';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const addEmployee = async (dataAdd: any, updateFileContract: any, uploadDocument: any) => {\r\n  await axios.post(API_PATHS.employee, dataAdd, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n  const jsonData = await axios.get(`${API_PATHS.employee}?page=1`, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n  const data = jsonData.data.data.data;\r\n  if (updateFileContract.length > 0) {\r\n    const formData1 = new FormData();\r\n    formData1.append('employee_id', data[0].id);\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      formData1.append('names[]', updateFileContract[i].name);\r\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\r\n      const file = updateFileContract[i].fileList[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  if (uploadDocument.length > 0) {\r\n    const formData = new FormData();\r\n    formData.append('employee_id', data[0].id);\r\n    for (let i = 0; i < uploadDocument.length; i++) {\r\n      const file = uploadDocument[i].file[0];\r\n      formData.append('documents[]', file, file.name);\r\n    }\r\n\r\n    await axios.post(API_PATHS.uploadDocument, formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  } else {\r\n    toast.success('Success message');\r\n  }\r\n};\r\n\r\nexport const updateEmployee = async (\r\n  number: any,\r\n  dataUpdate: any,\r\n  deleteDocument?: any,\r\n  updateFileContract?: any,\r\n  uploadDocument?: any,\r\n) => {\r\n  const json = await axios.put(`${API_PATHS.employee}/${number}`, dataUpdate, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n    },\r\n  });\r\n\r\n  if (updateFileContract.length > 0) {\r\n    const formData1 = new FormData();\r\n    formData1.append('employee_id', number);\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      formData1.append('names[]', updateFileContract[i].name);\r\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\r\n      const file = updateFileContract[i].fileList[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n    await axios.post(API_PATHS.uploadFileContract, formData1, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  const formData1 = new FormData();\r\n  formData1.append('employee_id', number);\r\n  if (deleteDocument.length > 0) {\r\n    for (let i = 0; i < deleteDocument.length; i++) {\r\n      formData1.append('deleted_ids[]', deleteDocument[i]);\r\n    }\r\n  }\r\n  if (uploadDocument && uploadDocument.length > 0) {\r\n    for (let i = 0; i < updateFileContract.length; i++) {\r\n      formData1.append('names[]', updateFileContract[i].name);\r\n      formData1.append('contract_dates[]', updateFileContract[i].contract_date);\r\n      const file = updateFileContract[i].fileList[0];\r\n      formData1.append('documents[]', file, file.name);\r\n    }\r\n  }\r\n  await axios.post(API_PATHS.uploadDocument, formData1, {\r\n    headers: {\r\n      Authorization: `Bearer ${Cookies.get(ACCESS_TOKEN_KEY)}`,\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n\r\n  if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n    toast.success('Success message');\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}